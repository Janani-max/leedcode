class Solution {
public:
    void appendZeros(string &num,int n){
        while(n--)  num.push_back('0');
    }
    string multiplication(string &num,int n){
        reverse(num.begin(),num.end());
        string result;
        
        int carry = 0;
        for(int i=0;i<num.size();i++){
            int number = (num[i] - '0')*n + carry;
            carry = number/10;
            result += (number%10)+'0';
        }
        while(carry){   
            result += (carry%10)+'0';   
            carry /= 10;
        }
        reverse(result.begin(),result.end());
        reverse(num.begin(),num.end());
        return result;
    }
    string addition(string num1,string num2){
        int n = num1.size() , m = num2.size() ;
        reverse(num1.begin(),num1.end());
        reverse(num2.begin(),num2.end());

        int i = 0 , j = 0 , carry = 0;
        string result;
        for(;i<n || j<m;){
            int number = carry;
            if(i<n) number += num1[i++] - '0';
            if(j<m) number += num2[j++] - '0';

            carry = number/10;
            result += (number%10)+'0';
        }
        while(carry){   
            result += (carry%10)+'0';   
            carry /= 10;
        }
        reverse(result.begin(),result.end());
        return result;
    }
    string multiply(string num1, string num2) {
        if(num1=="0" || num2 == "0")    return "0";
        int n = num1.size() , m = num2.size();
        string result = "0";
        for(int i=m-1;i>=0;i--){
            string temp = multiplication(num1,num2[i]-'0');
            appendZeros(temp,m-(i+1));
            result = addition(result,temp);
        }
        return result;
    }
};
